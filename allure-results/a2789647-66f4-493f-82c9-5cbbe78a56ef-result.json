{"uuid":"a2789647-66f4-493f-82c9-5cbbe78a56ef","historyId":"b5c03f8dfd0a60332090bf0f9a4bdf50","fullName":"src/test/resources/features/08_PatientModuleNegative.feature:73","labels":[{"name":"tag","value":"tag03"},{"name":"tag","value":"Test11"},{"name":"host","value":"DESKTOP-0NN2DFH"},{"name":"thread","value":"12120@DESKTOP-0NN2DFH.main(1)"},{"name":"feature","value":"Patient Module Negative"},{"name":"story","value":"Check dietician able to update patient with mandatory fields empty and only with valid additional details"},{"name":"suite","value":"Patient Module Negative"},{"name":"testClass","value":"Check dietician able to update patient with mandatory fields empty and only with valid additional details"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///C:/Users/shanj/vino-workspace/Team01_API_Ninja/src/test/resources/features/08_PatientModuleNegative.feature"},{"name":"package","value":"src.test.resources.features.08_PatientModuleNegative_feature.Patient Module Negative"}],"links":[],"name":"Check dietician able to update patient with mandatory fields empty and only with valid additional details","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected:<200> but was:<400>","trace":"java.lang.AssertionError: expected:<200> but was:<400>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat api.stepdefinitions.PatientModule.dietician_recieves_bad_request(PatientModule.java:261)\r\n\tat ✽.Dietician recieves 400 Bad request(file:///C:/Users/shanj/vino-workspace/Team01_API_Ninja/src/test/resources/features/08_PatientModuleNegative.feature:76)\r\n"},"stage":"finished","steps":[{"name":"Given  Set dietician bearer token","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724273697484,"stop":1724273697485},{"name":"Given  Dietician creates PUT request by entering only valid additional details into the form-data key and value fields.","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724273697485,"stop":1724273697486},{"name":"When  Dietician send PUT http request with endpoint by mandatory fields empty  only valid additional details","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724273697487,"stop":1724273698051},{"name":"Then  Dietician recieves 400 Bad request","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected:<200> but was:<400>","trace":"java.lang.AssertionError: expected:<200> but was:<400>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat api.stepdefinitions.PatientModule.dietician_recieves_bad_request(PatientModule.java:261)\r\n\tat ✽.Dietician recieves 400 Bad request(file:///C:/Users/shanj/vino-workspace/Team01_API_Ninja/src/test/resources/features/08_PatientModuleNegative.feature:76)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724273698051,"stop":1724273698054}],"attachments":[],"parameters":[],"start":1724273697483,"stop":1724273698055}