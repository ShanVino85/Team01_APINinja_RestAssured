{"uuid":"14197a24-22c0-4e16-927b-f635b630e71f","historyId":"e0688104ffe8c8b00aaa81bed5ebf7dd","fullName":"src/test/resources/features/03_PatientModulePositive.feature:55","labels":[{"name":"tag","value":"tag03"},{"name":"tag","value":"Test08"},{"name":"host","value":"DESKTOP-0NN2DFH"},{"name":"thread","value":"29776@DESKTOP-0NN2DFH.main(1)"},{"name":"feature","value":"Patient Module Positive"},{"name":"story","value":"Check dietician able to add only new vitals without reports for existing patient without existing report"},{"name":"suite","value":"Patient Module Positive"},{"name":"testClass","value":"Check dietician able to add only new vitals without reports for existing patient without existing report"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///C:/Users/shanj/vino-workspace/Team01_API_Ninja/src/test/resources/features/03_PatientModulePositive.feature"},{"name":"package","value":"src.test.resources.features.03_PatientModulePositive_feature.Patient Module Positive"}],"links":[],"name":"Check dietician able to add only new vitals without reports for existing patient without existing report","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected:<400> but was:<200>","trace":"java.lang.AssertionError: expected:<400> but was:<200>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat api.stepdefinitions.PatientModule.dietician_receives_ok_and_the_response_body_contains_updated_details(PatientModule.java:753)\r\n\tat ✽.Dietician receives 200 OK and the response body contains updated details(file:///C:/Users/shanj/vino-workspace/Team01_API_Ninja/src/test/resources/features/03_PatientModulePositive.feature:58)\r\n"},"stage":"finished","steps":[{"name":"Given  Set dietician bearer token","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724333068973,"stop":1724333068974},{"name":"Given  Dietician creates PUT request by entering valid data into the form-data key and value fields except file and valid patient ID without reports for existing patient without existing report","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724333068974,"stop":1724333068976},{"name":"When  Dietician sends PUT HTTP request to the endpoint with valid patient ID without reports for existing patient without existing report","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724333068976,"stop":1724333069348},{"name":"Then  Dietician receives 200 OK and the response body contains updated details","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected:<400> but was:<200>","trace":"java.lang.AssertionError: expected:<400> but was:<200>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat api.stepdefinitions.PatientModule.dietician_receives_ok_and_the_response_body_contains_updated_details(PatientModule.java:753)\r\n\tat ✽.Dietician receives 200 OK and the response body contains updated details(file:///C:/Users/shanj/vino-workspace/Team01_API_Ninja/src/test/resources/features/03_PatientModulePositive.feature:58)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724333069348,"stop":1724333069350}],"attachments":[],"parameters":[],"start":1724333068973,"stop":1724333069351}