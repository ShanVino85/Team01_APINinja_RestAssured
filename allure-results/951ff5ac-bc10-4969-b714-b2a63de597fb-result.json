{"uuid":"951ff5ac-bc10-4969-b714-b2a63de597fb","historyId":"b1b7d331a69e0d075a8d61ee9168590b","fullName":"src/test/resources/features/03_PatientModulePositive.feature:15","labels":[{"name":"tag","value":"tag03"},{"name":"tag","value":"Test02"},{"name":"host","value":"DESKTOP-0NN2DFH"},{"name":"thread","value":"32268@DESKTOP-0NN2DFH.main(1)"},{"name":"feature","value":"Patient Module Positive"},{"name":"story","value":"Check dietician able to create patient only with valid mandatory details"},{"name":"suite","value":"Patient Module Positive"},{"name":"testClass","value":"Check dietician able to create patient only with valid mandatory details"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///C:/Users/shanj/vino-workspace/Team01_API_Ninja/src/test/resources/features/03_PatientModulePositive.feature"},{"name":"package","value":"src.test.resources.features.03_PatientModulePositive_feature.Patient Module Positive"}],"links":[],"name":"Check dietician able to create patient only with valid mandatory details","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected:<401> but was:<201>","trace":"java.lang.AssertionError: expected:<401> but was:<201>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat api.stepdefinitions.PatientModule.dietician_recieves_created_and_with_response_body_auto_created_dietician_id_and_login_password(PatientModule.java:82)\r\n\tat ✽.Dietician recieves 201 created and with response body. (Auto created dietician ID and login password)(file:///C:/Users/shanj/vino-workspace/Team01_API_Ninja/src/test/resources/features/03_PatientModulePositive.feature:18)\r\n"},"stage":"finished","steps":[{"name":"Given  Set dietician bearer token","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724342830227,"stop":1724342830231},{"name":"Given  Dietician creates POST request only by valid mandatory details into the form-data key and value fields.","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724342830232,"stop":1724342830235},{"name":"When  Dietician send POST http request with endpoint\tonly with valid mandatory details","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724342830236,"stop":1724342831013},{"name":"Then  Dietician recieves 201 created and with response body. (Auto created dietician ID and login password)","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected:<401> but was:<201>","trace":"java.lang.AssertionError: expected:<401> but was:<201>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat api.stepdefinitions.PatientModule.dietician_recieves_created_and_with_response_body_auto_created_dietician_id_and_login_password(PatientModule.java:82)\r\n\tat ✽.Dietician recieves 201 created and with response body. (Auto created dietician ID and login password)(file:///C:/Users/shanj/vino-workspace/Team01_API_Ninja/src/test/resources/features/03_PatientModulePositive.feature:18)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1724342831016,"stop":1724342831030}],"attachments":[],"parameters":[],"start":1724342830225,"stop":1724342831034}